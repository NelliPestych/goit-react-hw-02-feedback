{"version":3,"sources":["components/FeedbackOptions.js","components/CountTotalFeedback11.js","components/CountPositiveFeedbackPercentage.js","components/Statistics.js","components/Notification.js","components/Section.js","components/Feedback.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","onClick","CountTotalFeedback11","feedback","total","Object","values","CountPositiveFeedbackPercentage","good","Statistics","neutral","bad","Notification","message","propTypes","PropTypes","object","isRequired","number","Section","title","children","Feedback","state","options","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGe,SAASA,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,6BACE,4BAAQC,QAAS,kBAAMD,EAAgB,UAAvC,QACA,4BAAQC,QAAS,kBAAMD,EAAgB,aAAvC,WACA,4BAAQC,QAAS,kBAAMD,EAAgB,SAAvC,Q,oBCNS,SAASE,EAAT,GAGX,IAHwD,IAAbC,EAAY,EAAZA,SAEvCC,EAAQ,EACZ,MAFeC,OAAOC,OAAOH,GAE7B,eAA4B,CAC1BC,GADc,KAGlB,OAAOA,ECNM,SAASG,EAAT,GAGb,IAH2E,IAAnBC,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,SAE1DC,EAAQ,EACZ,MAFeC,OAAOC,OAAOH,GAE7B,eAA4B,CAC1BC,GADc,KAKhB,OADmC,IAAPI,EADDJ,ECHd,SAASK,EAAT,GAKX,IAJFD,EAIC,EAJDA,KACAE,EAGC,EAHDA,QACAC,EAEC,EAFDA,IACAR,EACC,EADDA,SAEA,OACE,6BACE,oCAAUK,GACV,uCAAaE,GACb,mCAASC,GACT,qCAAU,kBAACT,EAAD,CAAsBC,SAAUA,KAC1C,iDAAsB,kBAACI,EAAD,CAAiCC,KAAMA,EAAML,SAAUA,IAA7E,OCdS,SAASS,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACA,2BAAIA,GHONX,EAAqBY,UAAY,CAC/BX,SAAUY,IAAUC,OAAOC,YCA7BV,EAAgCO,UAAY,CACxCX,SAAUY,IAAUC,OAAOC,WAC3BT,KAAMO,IAAUG,OAAOD,YGEZE,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,6BACE,4BAAKD,GACJC,ICDcC,E,4MACnBC,MAAQ,CACNf,KAAM,EACNE,QAAS,EACTC,IAAK,G,EAGPX,gBAAkB,SAACwB,GACjB,EAAKC,UAAS,SAAAF,GACZ,OAAO,eACJC,EAAUD,EAAMC,GAAW,O,uDAQhC,IAFA,IACIpB,EAAQ,EACZ,MAFeC,OAAOC,OAAOoB,KAAKH,OAElC,eAA4B,CAC1BnB,GADc,KAGhB,OACE,6BACE,kBAAC,EAAD,CAASgB,MAAM,yBACf,kBAACrB,EAAD,CACEC,gBAAiB0B,KAAK1B,mBAGxB,kBAAC,EAAD,CAASoB,MAAM,cACdhB,EAAQ,EACP,kBAACK,EAAD,CACED,KAAMkB,KAAKH,MAAMf,KACjBE,QAASgB,KAAKH,MAAMb,QACpBC,IAAKe,KAAKH,MAAMZ,IAChBR,SAAUuB,KAAKH,QAEd,kBAACX,EAAD,CAAcC,QAAQ,4B,GApCGc,IAAMC,WCD5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.87304f41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => onLeaveFeedback('good')}>good</button>\r\n      <button onClick={() => onLeaveFeedback('neutral')}>neutral</button>\r\n      <button onClick={() => onLeaveFeedback('bad')}>bad</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function CountTotalFeedback11({ feedback }) {\r\n    const values = Object.values(feedback);\r\n    let total = 0;\r\n    for (const value of values) {\r\n      total += value;\r\n    }\r\n  return total;\r\n  \r\n}\r\n\r\nCountTotalFeedback11.propTypes = {\r\n  feedback: PropTypes.object.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function CountPositiveFeedbackPercentage({ good, feedback }) {\r\n  const values = Object.values(feedback);\r\n  let total = 0;\r\n  for (const value of values) {\r\n    total += value;\r\n  }\r\n  const countTotalFeedback = total;\r\n  const positivePercentage = (good * 100) / countTotalFeedback;\r\n  return positivePercentage;\r\n}\r\n\r\nCountPositiveFeedbackPercentage.propTypes = {\r\n    feedback: PropTypes.object.isRequired,\r\n    good: PropTypes.number.isRequired,\r\n  };\r\n","import React from \"react\";\r\nimport CountTotalFeedback11 from \"./CountTotalFeedback11\";\r\nimport CountPositiveFeedbackPercentage from \"./CountPositiveFeedbackPercentage\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  feedback,\r\n}) {\r\n  return (\r\n    <div>\r\n      <p>good: {good}</p>\r\n      <p>neutral: {neutral}</p>\r\n      <p>bad: {bad}</p>\r\n      <p>total: <CountTotalFeedback11 feedback={feedback} /></p>\r\n      <p>positive feedback: <CountPositiveFeedbackPercentage good={good} feedback={feedback} /> %</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  feedback: PropTypes.object.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n};\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n  <p>{message}</p>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistics\";\r\nimport Notification from \"./Notification\";\r\nimport Section from \"./Section\";\r\n\r\nexport default class Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = (options) => {\r\n    this.setState(state => {\r\n      return {\r\n        [options]: state[options] + 1,\r\n      };\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const values = Object.values(this.state);\r\n    let total = 0;\r\n    for (const value of values) {\r\n      total += value;}\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          onLeaveFeedback={this.onLeaveFeedback}\r\n        />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n        {total > 0 ? (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            feedback={this.state}\r\n          />\r\n        ) : (<Notification message=\"No feedback given\" />)}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Feedback from \"./components/Feedback\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Feedback />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}